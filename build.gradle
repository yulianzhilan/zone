buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	// JMS
//	compile('org.springframework:spring-jms')
//	compile('org.apache.activemq:activemq-client')

	//MAIL
	compile('org.springframework.boot:spring-boot-starter-mail')

	//下面两个是文件上传的依赖包
	// file upload
	// https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
	// 非必须，可简化I/O操作
	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	// 使用LEGACYHTML5代替HTML5解决<meta>标签没有正常结束异常（非严格模式）
	compile('net.sourceforge.nekohtml:nekohtml:1.9.22')
	// https://mvnrepository.com/artifact/javax.servlet/jstl
	compile group: 'javax.servlet', name: 'jstl', version: '1.2'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
	compile("org.springframework.boot:spring-boot-configuration-processor")
	// 加密
	compile('com.github.ulisesbocchio:jasypt-spring-boot-starter:1.12')
	compile group: 'org.jasypt', name: 'jasypt-spring31', version: '1.9.2'

}

compileJava.dependsOn(processResources)

springBoot {
	mainClass = "cn.janescott.ZoneApplication"
}

bootRun {
	addResources = true
}